>>> print_square = __import__('4-print_square').print_square


Check if size is an integer

>>> print_square(3)
###
###
###

>>> print_square(2.0)
Traceback (most recent call last):
    ...
TypeError: size must be an integer

>>> print_square(0.5)
Traceback (most recent call last):
    ...
TypeError: size must be an integer

>>> print_square("two")
Traceback (most recent call last):
    ...
TypeError: size must be an integer

>>> print_square("s")
Traceback (most recent call last):
    ...
TypeError: size must be an integer

>>> print_square(None)
Traceback (most recent call last):
    ...
TypeError: size must be an integer

>>> print_square(float('nan'))
Traceback (most recent call last):
    ...
TypeError: size must be an integer

>>> print_square(float('inf'))
Traceback (most recent call last):
    ...
TypeError: size must be an integer

>>> print_square(-2.5)
Traceback (most recent call last):
    ...
TypeError: size must be an integer

Check that value of size is not less than 0

>>> print_square(-2)
Traceback (most recent call last):
    ...
ValueError: size must be >= 0

Check if size is empty

>>> print_square()
Traceback (most recent call last):
    ...
TypeError: print_square() missing 1 required positional argument: 'size'

Check that value of size is == 0

>>> print_square(0)
